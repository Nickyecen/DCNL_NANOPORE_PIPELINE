// CONFIGURATION FILE

// Pipeline parameter default values, can be modified by user when calling pipeline on command line (e.g. --ont_reads_fq sample_1.fastq) ##

// Input reference fasta file
params.ref = 'None' 

// Step of pipeline to execute
params.step = 'None'

// Output directory for pipeline results
params.out_dir = "output_directory/" 

// directory of basecalling data
params.basecall_path = 'None' 

// MAPQ filtering threshold for bam files, 0 for no filtering
params.mapq = "10" 

// Quality score threshold
params.qscore_thresh = "9"

// Desired basecall speed 
params.basecall_speed = "hac"

// Desired basecaller modifications
params.basecall_mods = false

// Desired basecall configuration
params.basecall_config = "None"

// Type of read trimming during basecalling ("all", "primers", "adapters", "none")
params.basecall_trim = "none"

// Basecalling demultiplexing
params.basecall_demux = false

// CPU vs GPU basecalling
params.basecall_compute = "gpu"

// Trim barcodes (only counts if demultiplexing is enabled)
params.trim_barcode = "True"

// Add prefix to all output files
params.prefix = "None"

// Which GPU devices to use for basecalling?
params.gpu_devices = "all"

// Previous results
params.steps_2_and_3_input_directory = "None"

// MultiQC config
params.multiqc_config = "None"


if (params.step == 1) {

	queue_size = 1

} else {

	queue_size = 5

}

process { 

    // Define local cpu execution

    withLabel: cpu {
        executor='local'
    }
    
    // Define local gpu execution
    withLabel: gpu {
        
        executor='local'
        containerOptions = '--nv'
    }
   
    // Define the singularity container for every process, will pull container from the cloud
    container = "library://bernardo-a-heberle/dcnl/ont_methylation:sha256.d4ccdf4552bfc4cdbb4ad0908bd20a8e537ac50281d1f722402c5d7204c705b2"

}

executor {

	name = 'local'
	queueSize = queue_size

}


singularity {

	enabled = true

}

